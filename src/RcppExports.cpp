// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cleanAngles
NumericMatrix cleanAngles(NumericMatrix as);
RcppExport SEXP mta2_cleanAngles(SEXP asSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type as(asSEXP);
    __result = Rcpp::wrap(cleanAngles(as));
    return __result;
END_RCPP
}
// distMat
NumericMatrix distMat(NumericMatrix x, NumericMatrix y, int power);
RcppExport SEXP mta2_distMat(SEXP xSEXP, SEXP ySEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    __result = Rcpp::wrap(distMat(x, y, power));
    return __result;
END_RCPP
}
// distMatV
NumericMatrix distMatV(NumericMatrix x, NumericMatrix y, int power);
RcppExport SEXP mta2_distMatV(SEXP xSEXP, SEXP ySEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    __result = Rcpp::wrap(distMatV(x, y, power));
    return __result;
END_RCPP
}
// distMat3d
NumericMatrix distMat3d(NumericMatrix x, NumericMatrix y, NumericMatrix z, int power);
RcppExport SEXP mta2_distMat3d(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    __result = Rcpp::wrap(distMat3d(x, y, z, power));
    return __result;
END_RCPP
}
// distMat3dV
NumericMatrix distMat3dV(NumericMatrix x, NumericMatrix y, NumericMatrix z, int power);
RcppExport SEXP mta2_distMat3dV(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    __result = Rcpp::wrap(distMat3dV(x, y, z, power));
    return __result;
END_RCPP
}
// computeNorm
std::vector<double> computeNorm(double r);
RcppExport SEXP mta2_computeNorm(SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    __result = Rcpp::wrap(computeNorm(r));
    return __result;
END_RCPP
}
// gaussBlurSlow
std::vector<double> gaussBlurSlow(std::vector<double> source, std::vector<double> target, double w, double h, double r);
RcppExport SEXP mta2_gaussBlurSlow(SEXP sourceSEXP, SEXP targetSEXP, SEXP wSEXP, SEXP hSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<double> >::type source(sourceSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type target(targetSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    __result = Rcpp::wrap(gaussBlurSlow(source, target, w, h, r));
    return __result;
END_RCPP
}
// gaussBlur
std::vector<double> gaussBlur(std::vector<double> source, std::vector<double> target, double w, double h, double r);
RcppExport SEXP mta2_gaussBlur(SEXP sourceSEXP, SEXP targetSEXP, SEXP wSEXP, SEXP hSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<double> >::type source(sourceSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type target(targetSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    __result = Rcpp::wrap(gaussBlur(source, target, w, h, r));
    return __result;
END_RCPP
}
// boxBlur
std::vector<double> boxBlur(std::vector<double> source, std::vector<double> target, double w, double h, double r);
RcppExport SEXP mta2_boxBlur(SEXP sourceSEXP, SEXP targetSEXP, SEXP wSEXP, SEXP hSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<double> >::type source(sourceSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type target(targetSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    __result = Rcpp::wrap(boxBlur(source, target, w, h, r));
    return __result;
END_RCPP
}
// getAngleP
NumericVector getAngleP(NumericVector x, NumericVector y);
RcppExport SEXP mta2_getAngleP(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(getAngleP(x, y));
    return __result;
END_RCPP
}
// getAngleV
NumericVector getAngleV(NumericVector x, NumericVector y);
RcppExport SEXP mta2_getAngleV(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(getAngleV(x, y));
    return __result;
END_RCPP
}
// getAnglesP
NumericMatrix getAnglesP(NumericMatrix xs, NumericMatrix ys);
RcppExport SEXP mta2_getAnglesP(SEXP xsSEXP, SEXP ysSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    __result = Rcpp::wrap(getAnglesP(xs, ys));
    return __result;
END_RCPP
}
// getAnglesV
NumericMatrix getAnglesV(NumericMatrix xs, NumericMatrix ys);
RcppExport SEXP mta2_getAnglesV(SEXP xsSEXP, SEXP ysSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    __result = Rcpp::wrap(getAnglesV(xs, ys));
    return __result;
END_RCPP
}
// getLength
double getLength(NumericVector x, NumericVector y);
RcppExport SEXP mta2_getLength(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(getLength(x, y));
    return __result;
END_RCPP
}
// getLength3d
double getLength3d(NumericVector x, NumericVector y, NumericVector z);
RcppExport SEXP mta2_getLength3d(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    __result = Rcpp::wrap(getLength3d(x, y, z));
    return __result;
END_RCPP
}
// getLengths
NumericVector getLengths(NumericMatrix xs, NumericMatrix ys);
RcppExport SEXP mta2_getLengths(SEXP xsSEXP, SEXP ysSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    __result = Rcpp::wrap(getLengths(xs, ys));
    return __result;
END_RCPP
}
// getLengths3d
NumericVector getLengths3d(NumericMatrix xs, NumericMatrix ys, NumericMatrix zs);
RcppExport SEXP mta2_getLengths3d(SEXP xsSEXP, SEXP ysSEXP, SEXP zsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zs(zsSEXP);
    __result = Rcpp::wrap(getLengths3d(xs, ys, zs));
    return __result;
END_RCPP
}
// getVelocity
NumericVector getVelocity(NumericVector x, NumericVector y);
RcppExport SEXP mta2_getVelocity(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    __result = Rcpp::wrap(getVelocity(x, y));
    return __result;
END_RCPP
}
// getVelocity3d
NumericVector getVelocity3d(NumericVector x, NumericVector y, NumericVector z);
RcppExport SEXP mta2_getVelocity3d(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    __result = Rcpp::wrap(getVelocity3d(x, y, z));
    return __result;
END_RCPP
}
// getVelocities
NumericMatrix getVelocities(NumericMatrix xs, NumericMatrix ys);
RcppExport SEXP mta2_getVelocities(SEXP xsSEXP, SEXP ysSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    __result = Rcpp::wrap(getVelocities(xs, ys));
    return __result;
END_RCPP
}
// getVelocities3d
NumericMatrix getVelocities3d(NumericMatrix xs, NumericMatrix ys, NumericMatrix zs);
RcppExport SEXP mta2_getVelocities3d(SEXP xsSEXP, SEXP ysSEXP, SEXP zsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zs(zsSEXP);
    __result = Rcpp::wrap(getVelocities3d(xs, ys, zs));
    return __result;
END_RCPP
}
// spatialRescale
NumericMatrix spatialRescale(NumericVector x, NumericVector y, int npts);
RcppExport SEXP mta2_spatialRescale(SEXP xSEXP, SEXP ySEXP, SEXP nptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type npts(nptsSEXP);
    __result = Rcpp::wrap(spatialRescale(x, y, npts));
    return __result;
END_RCPP
}
// spatialRescale3d
NumericMatrix spatialRescale3d(NumericVector x, NumericVector y, NumericVector z, int npts);
RcppExport SEXP mta2_spatialRescale3d(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP nptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type npts(nptsSEXP);
    __result = Rcpp::wrap(spatialRescale3d(x, y, z, npts));
    return __result;
END_RCPP
}
// spatialRescaleA
GenericVector spatialRescaleA(NumericMatrix xs, NumericMatrix ys, NumericVector n_pts);
RcppExport SEXP mta2_spatialRescaleA(SEXP xsSEXP, SEXP ysSEXP, SEXP n_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_pts(n_ptsSEXP);
    __result = Rcpp::wrap(spatialRescaleA(xs, ys, n_pts));
    return __result;
END_RCPP
}
// spatialRescaleAlong
NumericMatrix spatialRescaleAlong(NumericMatrix xs, NumericMatrix ys, NumericVector n_pts);
RcppExport SEXP mta2_spatialRescaleAlong(SEXP xsSEXP, SEXP ysSEXP, SEXP n_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_pts(n_ptsSEXP);
    __result = Rcpp::wrap(spatialRescaleAlong(xs, ys, n_pts));
    return __result;
END_RCPP
}
// spatialRescaleA3d
GenericVector spatialRescaleA3d(NumericMatrix xs, NumericMatrix ys, NumericMatrix zs, NumericVector n_pts);
RcppExport SEXP mta2_spatialRescaleA3d(SEXP xsSEXP, SEXP ysSEXP, SEXP zsSEXP, SEXP n_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zs(zsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_pts(n_ptsSEXP);
    __result = Rcpp::wrap(spatialRescaleA3d(xs, ys, zs, n_pts));
    return __result;
END_RCPP
}
// spatialRescaleAlong3d
NumericMatrix spatialRescaleAlong3d(NumericMatrix xs, NumericMatrix ys, NumericMatrix zs, NumericVector n_pts);
RcppExport SEXP mta2_spatialRescaleAlong3d(SEXP xsSEXP, SEXP ysSEXP, SEXP zsSEXP, SEXP n_ptsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zs(zsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_pts(n_ptsSEXP);
    __result = Rcpp::wrap(spatialRescaleAlong3d(xs, ys, zs, n_pts));
    return __result;
END_RCPP
}
// trajAlign
GenericVector trajAlign(NumericMatrix xs, NumericMatrix ys, bool start, bool end, NumericVector coordinates);
RcppExport SEXP mta2_trajAlign(SEXP xsSEXP, SEXP ysSEXP, SEXP startSEXP, SEXP endSEXP, SEXP coordinatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< bool >::type start(startSEXP);
    Rcpp::traits::input_parameter< bool >::type end(endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coordinates(coordinatesSEXP);
    __result = Rcpp::wrap(trajAlign(xs, ys, start, end, coordinates));
    return __result;
END_RCPP
}
// trajAlign3d
GenericVector trajAlign3d(NumericMatrix xs, NumericMatrix ys, NumericMatrix zs, bool start, bool end, NumericVector coordinates);
RcppExport SEXP mta2_trajAlign3d(SEXP xsSEXP, SEXP ysSEXP, SEXP zsSEXP, SEXP startSEXP, SEXP endSEXP, SEXP coordinatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zs(zsSEXP);
    Rcpp::traits::input_parameter< bool >::type start(startSEXP);
    Rcpp::traits::input_parameter< bool >::type end(endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type coordinates(coordinatesSEXP);
    __result = Rcpp::wrap(trajAlign3d(xs, ys, zs, start, end, coordinates));
    return __result;
END_RCPP
}
